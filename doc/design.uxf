<?xml version="1.0" encoding="UTF-8"?><diagram program="umlet" version="13.3">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>570</x>
      <y>230</y>
      <w>350</w>
      <h>330</h>
    </coordinates>
    <panel_attributes>Country
--
-name: String
-neighbours: Country[]
-nextBirthId: int
-humans: Human[]
-numDeath: int
-numImmune: int
-numInfected: int
-numSick: int
--
public void passDay()
public String getName()
public int getNumImmune()
public int getNumInfected()
public int getNumSick()
public Country[] getNeighbourList()
public Human getHuman(int id, String name)
public enter(Human)
public exit(Human)
public void giveBirth(name, id)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>910</x>
      <y>280</y>
      <w>80</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>970</x>
      <y>230</y>
      <w>330</w>
      <h>330</h>
    </coordinates>
    <panel_attributes>Human
--
-name: String
-id: int
-birthDay: int
-final bornCountry: Country
-currentCountry: Country
-remainToMove: int
-HealthState curentHealth: HealthState
-HealthState immune: HealthState
-HealthState sick: HealthState
-HealthState infected: HealthState
-HealthState health: HealthState
--
public void pass_day()
public bool isSick()
publc bool isInfected()
public bool isImmune()
--
private int decideDayToMove()
private Country decideDestination()
private void move(Country dest)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1060</x>
      <y>640</y>
      <w>200</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>#TODO: write HealthState 
as &lt;&lt;interface&gt;&gt;

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1350</x>
      <y>460</y>
      <w>210</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>currentHealth.isInfected()
bg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1290</x>
      <y>460</y>
      <w>80</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>60.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>650</x>
      <y>60</y>
      <w>230</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>Simulator
--
-countries: Country[]
-int: numDayPassed
-int bornId
--
passDay(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>740</x>
      <y>150</y>
      <w>30</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;80.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>320</x>
      <y>380</y>
      <w>190</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>for (human h: humans)
    h.passDay();
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>380</x>
      <y>120</y>
      <w>210</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>for (Country c: countries)
    c.passDay();
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1350</x>
      <y>530</y>
      <w>230</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>dest.enter(self)
self.currentCountry.exit(self)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1290</x>
      <y>540</y>
      <w>80</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>60.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1350</x>
      <y>370</y>
      <w>220</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>self.currentHealth.passDay()
self.remainToMove--
if remainToMove == 0:
    self.move()
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>580</x>
      <y>120</y>
      <w>90</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>500</x>
      <y>380</y>
      <w>90</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1290</x>
      <y>400</y>
      <w>80</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>60.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>0</x>
      <y>530</y>
      <w>540</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>humans.add(Human(Simulator.bornId, Simulator.numDayPassed, self))
Simulator.bornId++</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>530</x>
      <y>540</y>
      <w>60</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>40.0;10.0;10.0;10.0</additional_attributes>
  </element>
</diagram>
