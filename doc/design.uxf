<?xml version="1.0" encoding="UTF-8"?><diagram program="umlet" version="13.3">
  <zoom_level>9</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>567</x>
      <y>171</y>
      <w>315</w>
      <h>288</h>
    </coordinates>
    <panel_attributes>Country
--
-private name: String
-private neighbours: Country[]
-private humans: Human[]
-private numDeath: int
-private numImmune: int
-private numInfected: int
-private numSick: int
--
public void passDay()
public String getName()
public int getNumImmune()
public int getNumInfected()
public int getNumSick()
public Country[] getNeighbourList()
public Human getHuman(int bornId)
public enter(Human)
public exit(Human)
public void giveBirth(name, bornId)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>873</x>
      <y>216</y>
      <w>72</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>927</x>
      <y>171</y>
      <w>405</w>
      <h>315</h>
    </coordinates>
    <panel_attributes>Human
--
-name: String
-bornId: int
-birthDay: int
-final bornCountry: Country
-currentCountry: Country
-remainToMove: int
-HealthState curentHealth: HealthState
-HealthState immune: HealthState
-HealthState sick: HealthState
-HealthState infected: HealthState
-HealthState healthy: HealthState
--
public void passDay()
public bool isSick()
publc bool isInfected()
public bool isImmune()
--
private int decideDayToMove()
private Country decideDestination(Country[] neighbours)
private void move(Country dest)
public void die()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>927</x>
      <y>504</y>
      <w>306</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>abstract class HealthState 
--
-int: numDaysInState;
-private Human: human
--
public abstract bool isSick()
public abstract bool isInfected()
public abstract bool isImmune()
public abstract passDay()
private void setHealthState(HealthState state)

 </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1368</x>
      <y>405</y>
      <w>189</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>currentHealth.isImmune()
bg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>639</x>
      <y>18</y>
      <w>207</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>Simulator
--
-public countries: Country[]
-public int: numDayPassed
-private int nextBornId = -1;
--
public void passDay()
public int getNextBornId()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>720</x>
      <y>117</y>
      <w>27</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;60.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>342</x>
      <y>306</y>
      <w>171</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>for (human h: humans)
    h.passDay();
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>396</x>
      <y>72</y>
      <w>189</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>for (Country c: countries)
    c.passDay();
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1368</x>
      <y>441</y>
      <w>207</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>dest.enter(self)
self.currentCountry.exit(self)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1368</x>
      <y>324</y>
      <w>198</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>self.currentHealth.passDay()
self.remainToMove--
if remainToMove == 0:
    self.move()
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>0</x>
      <y>441</y>
      <w>513</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>humans.add(Human(Simulator.getBornId(), Simulator.getDayPassed(), name))
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>549</x>
      <y>684</y>
      <w>171</w>
      <h>81</h>
    </coordinates>
    <panel_attributes>Healthy
--
private void passDay()
public isHealthy()
private void beInfected()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>801</x>
      <y>684</y>
      <w>162</w>
      <h>81</h>
    </coordinates>
    <panel_attributes>Infected
--
private void passDay()
public bool isInfected()
private void beSick()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1044</x>
      <y>684</y>
      <w>153</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>Sick
--
private void passDay()
public isSick()
private void shallDie()
private beHealthy()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1260</x>
      <y>684</y>
      <w>162</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>Immune
--
private void passDay()
public isImmune()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>504</x>
      <y>441</y>
      <w>81</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>882</x>
      <y>81</y>
      <w>135</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>nextBornId++
return nextBornId</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>837</x>
      <y>108</y>
      <w>63</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>50.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>576</x>
      <y>81</y>
      <w>81</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1323</x>
      <y>351</y>
      <w>63</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>50.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1323</x>
      <y>405</y>
      <w>63</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>50.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1323</x>
      <y>450</y>
      <w>63</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>50.0;10.0;10.0;10.0</additional_attributes>
  </element>
</diagram>
