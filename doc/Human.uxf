<?xml version="1.0" encoding="UTF-8"?><diagram program="umlet" version="13.3">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>230</x>
      <y>0</y>
      <w>390</w>
      <h>540</h>
    </coordinates>
    <panel_attributes>public class Human
--
static int idGen = 0;
private final int id;
private int daysUntilMove;
protected Country country;
HealthState health;
--
public Human(Country c)
private static int genId()
private void genMoveDate()
private Country selectDest() 
private void move(Country destCountry)
public void passDay()
public int id()
public Country country() 
public boolean isHealthy() 
public boolean isInfected() 
public boolean isSick() 
public boolean isImmune() 
public boolean isDead()
public boolean isSuperHealthy() 
public boolean isInfectious() 
public boolean isVisiblyInfectious() 
public boolean isVaccineCandiate() 
protected void getHealthy() 
protected void getInfected() 
protected void getSick() 
protected void becomeImmune()
protected void die()
protected void getSuperHealthy() 
protected void vaccinate()
public boolean isDoctor()
public String toString()


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>660</x>
      <y>380</y>
      <w>220</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>health = new Healthy(this);</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>610</x>
      <y>380</y>
      <w>70</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>50.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>0</x>
      <y>240</y>
      <w>200</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>return health.isHealthy();</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>190</x>
      <y>240</y>
      <w>60</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;40.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>470</x>
      <y>570</y>
      <w>270</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>public class Doctor extends Human
--
public Doctor(Country c)
public boolean isDoctor()
public void passDay()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>150</x>
      <y>670</y>
      <w>420</w>
      <h>330</h>
    </coordinates>
    <panel_attributes>if (!health.isDead()) {
    SimulationRules rules = SimulationRules.getInstance();
    // reset daily vaccines
    int vaccines = rules.getDailyVaccines();
                                                           
    List&lt;Human&gt; candidates = country.residents()
        .stream()
        .filter(h -&gt; h.isVaccineCandiate())
        .collect(Collectors.toList());
                                                           
    for (Human h: candidates) {
        if (vaccines &gt; 0) {
            h.vaccinate();
            vaccines--;
        } else {
            break;
        }
    }
}
// do regular passday
super.passDay();
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>520</x>
      <y>530</y>
      <w>30</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;40.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>310</x>
      <y>630</y>
      <w>180</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;40.0;10.0;10.0;160.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>660</x>
      <y>180</y>
      <w>230</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>health.passDay();
if (!health.isDead()) {
    daysUntilMove--;
}
if (daysUntilMove == 0) {
    genMoveDate();
    Country dest = selectDest();
    if (dest != null) {
        move(dest);
    }
}
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>610</x>
      <y>190</y>
      <w>70</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>50.0;10.0;10.0;10.0</additional_attributes>
  </element>
</diagram>
